version: 2.1

workflows:
  postgresql:
    jobs:
      - postgresql
      
jobs:
  postgresql:
    docker:
      - image: cimg/python:3.10
        environment:
          TEST_DATABASE_URL: postgresql://postgres@localhost/circle_test
          TEST_DATABASE_URL_POSTGRES: postgresql://postgres@localhost/test_db

      #- image: cimg/postgres:14.9
      - image: imlogang/postgres-no-pg-cron:latest
        environment:
          POSTGRES_USER: postgres

    steps:
      - checkout
      - run: sudo apt-get update
      - run: sudo apt-get install postgresql-client
      - run: whoami
      # - run: |
      #     psql \
      #     -d $TEST_DATABASE_URL \
      #     -c "CREATE DATABASE test_db;" \
      # - run: |
      #     psql \
      #     -d $TEST_DATABASE_URL \
      #     -c "DROPDATABASE test_db;" \
      # - run: | 
      #     psql \
      #     -d $TEST_DATABASE_URL_POSTGRES \
      #     -c "CREATE DATABASE test_db;" \
      - run:
          name: Wait for PostgreSQL to start
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: Create the test database
          command: psql -h localhost -U postgres -c "CREATE DATABASE test_db;"

      - run:
          name: Maintain connection to the database
          command: psql -h localhost -U postgres -d test_db -c "SELECT pg_sleep(60);" 
          background: true

      - run:
          name: Attempt to drop the database
          command: |
            sleep 10  # wait for the other connection to be established
            psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS test_db;"


